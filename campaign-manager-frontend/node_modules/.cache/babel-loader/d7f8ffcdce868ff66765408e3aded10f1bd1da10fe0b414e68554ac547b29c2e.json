{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karab\\\\OneDrive\\\\Documents\\\\ABWinfuture\\\\ab-testing-manager\\\\src\\\\components\\\\RunTest\\\\RunTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Typography, Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RunTest = () => {\n  _s();\n  const [testNames, setTestNames] = useState([]); // Provide an initial value of empty array\n  const [testName, setTestName] = useState(\"\");\n  const [click, setClick] = useState(0);\n  const [impressions, setImpressions] = useState(0);\n  const [variant_segment, setVariantSegment] = useState(0);\n  const [control_x_path, setControlXPath] = useState(\"\");\n  const [variant_x_path, setVariantXPath] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    fetchTestNames();\n  }, []);\n  const fetchTestNames = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/test_names');\n      setTestNames(response.data);\n      console.log(testNames); // Log the response data for debugging purposes\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleSelectChange = event => {\n    const value = event.target.value;\n    if (typeof value === \"string\") {\n      setTestName(value);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const payload = {\n      test_name: testName,\n      click,\n      impressions,\n      variant_segment,\n      control_x_path,\n      variant_x_path\n    };\n    try {\n      const response = await axios.post('http://localhost:5001/ab-test-metric-input', payload);\n      console.log(response.data);\n      setError(\"\"); // clear error message on successful submission\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        required: true,\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Test Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: testName,\n          onChange: handleSelectChange,\n          children: testNames.map((name, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: name,\n            children: name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Clicks\",\n        type: \"number\",\n        value: click,\n        onChange: e => setClick(Number(e.target.value)),\n        required: true,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Impressions\",\n        type: \"number\",\n        value: impressions,\n        onChange: e => setImpressions(Number(e.target.value)),\n        required: true,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Variant Segment\",\n        type: \"number\",\n        value: variant_segment,\n        onChange: e => setVariantSegment(Number(e.target.value)),\n        required: true,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Control XPath\",\n        value: control_x_path,\n        onChange: e => setControlXPath(e.target.value),\n        required: true,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Variant XPath\",\n        value: variant_x_path,\n        onChange: e => setVariantXPath(e.target.value),\n        required: true,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Run Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(RunTest, \"CndGmfvtd7XkFDynXGD3k0bwrpo=\");\n_c = RunTest;\nexport default RunTest;\nvar _c;\n$RefreshReg$(_c, \"RunTest\");","map":{"version":3,"names":["React","useEffect","useState","axios","TextField","Button","Typography","Select","MenuItem","InputLabel","FormControl","jsxDEV","_jsxDEV","RunTest","_s","testNames","setTestNames","testName","setTestName","click","setClick","impressions","setImpressions","variant_segment","setVariantSegment","control_x_path","setControlXPath","variant_x_path","setVariantXPath","error","setError","fetchTestNames","response","get","data","console","log","handleSelectChange","event","value","target","handleSubmit","preventDefault","payload","test_name","post","children","onSubmit","required","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","name","index","color","label","type","e","Number","variant","_c","$RefreshReg$"],"sources":["C:/Users/Karab/OneDrive/Documents/ABWinfuture/ab-testing-manager/src/components/RunTest/RunTest.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, makeStyles, Typography, Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\r\n\r\nconst RunTest: React.FC = () => {\r\n  const [testNames, setTestNames] = useState<string[]>([]); // Provide an initial value of empty array\r\n  const [testName, setTestName] = useState(\"\");\r\n  const [click, setClick] = useState(0);\r\n  const [impressions, setImpressions] = useState(0);\r\n  const [variant_segment, setVariantSegment] = useState(0);\r\n  const [control_x_path, setControlXPath] = useState(\"\");\r\n  const [variant_x_path, setVariantXPath] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchTestNames();\r\n  }, []);\r\n\r\n  const fetchTestNames = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/test_names');\r\n      setTestNames(response.data);\r\n      console.log(testNames); // Log the response data for debugging purposes\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleSelectChange = (\r\n    event: React.ChangeEvent<{ value: unknown }>\r\n  ) => {\r\n    const value = event.target.value;\r\n    if (typeof value === \"string\") {\r\n      setTestName(value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n  \r\n    const payload = {\r\n      test_name: testName, \r\n      click, \r\n      impressions, \r\n      variant_segment, \r\n      control_x_path, \r\n      variant_x_path\r\n    };\r\n    try {\r\n      const response = await axios.post('http://localhost:5001/ab-test-metric-input', payload);\r\n      console.log(response.data);\r\n      setError(\"\"); // clear error message on successful submission\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };  \r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <FormControl required fullWidth>\r\n          <InputLabel>Test Name</InputLabel>\r\n          <Select\r\n    value={testName}\r\n    onChange={handleSelectChange}\r\n  >\r\n    {testNames.map((name, index) => (\r\n      <MenuItem value={name} key={index}>{name}</MenuItem>\r\n    ))}\r\n  </Select>\r\n        </FormControl>\r\n        {error && <Typography color=\"error\">{error}</Typography>}\r\n   \r\n        {error && <Typography color=\"error\">{error}</Typography>}\r\n        <TextField\r\n          label=\"Clicks\"\r\n          type=\"number\"\r\n          value={click}\r\n          onChange={e => setClick(Number(e.target.value))}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Impressions\"\r\n          type=\"number\"\r\n          value={impressions}\r\n          onChange={e => setImpressions(Number(e.target.value))}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Variant Segment\"\r\n          type=\"number\"\r\n          value={variant_segment}\r\n          onChange={e => setVariantSegment(Number(e.target.value))}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Control XPath\"\r\n          value={control_x_path}\r\n          onChange={e => setControlXPath(e.target.value)}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Variant XPath\"\r\n          value={variant_x_path}\r\n          onChange={e => setVariantXPath(e.target.value)}\r\n          required\r\n          fullWidth\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Run Test\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RunTest;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}