{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karab\\\\OneDrive\\\\Documents\\\\ABWinfuture\\\\ab-testing-manager\\\\src\\\\components\\\\CreateTest\\\\CreateTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ABTestService from '../../services/api';\nimport { v4 as uuidv4 } from 'uuid';\nimport { StyleSheet, View, Text, ScrollView, Alert } from 'react-native';\nimport { Input, Button } from 'react-native-elements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTest = _ref => {\n  _s();\n  let {\n    setTestId\n  } = _ref;\n  const [formData, setFormData] = useState({\n    test_id: uuidv4(),\n    visitors: 0,\n    sample_size: 0,\n    start_date: '',\n    end_date: '',\n    variant_identifier: '',\n    control_identifier: '',\n    variant_segment: 0,\n    control_segment: 0,\n    website: ''\n  });\n  const handleInputChange = (name, value) => {\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async () => {\n    // Check if variant and control segments add up to 100\n    const variantSegment = +formData.variant_segment;\n    const controlSegment = +formData.control_segment;\n    if (variantSegment + controlSegment !== 100) {\n      Alert.alert('Error', 'The sum of the variant and control segments should equal 100');\n      return;\n    }\n    try {\n      await ABTestService.createTest(formData);\n      setTestId(formData.test_id);\n      Alert.alert('Success', 'Test created successfully');\n    } catch (error) {\n      console.error('Error creating test:', error);\n      Alert.alert('Error', 'Failed to create test');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ScrollView, {\n    style: styles.createTest,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Create Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(View, {\n      style: styles.formCard,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        style: styles.formCardTitle,\n        children: \"General Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Site Name\",\n        placeholder: \"Enter Site Name\",\n        value: formData.website,\n        onChangeText: value => handleInputChange('website', value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Create Test\",\n        onPress: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTest, \"BkgjieTu0I8CnsZ5tBUs0Qa/yAA=\");\n_c = CreateTest;\nexport default CreateTest;\nconst styles = StyleSheet.create({\n  createTest: {\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  formCard: {\n    backgroundColor: '#f9f9f9',\n    padding: 20,\n    borderRadius: 5,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 2\n  },\n  formCardTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10\n  }\n});\nvar _c;\n$RefreshReg$(_c, \"CreateTest\");","map":{"version":3,"names":["React","useState","ABTestService","v4","uuidv4","StyleSheet","View","Text","ScrollView","Alert","Input","Button","jsxDEV","_jsxDEV","CreateTest","_ref","_s","setTestId","formData","setFormData","test_id","visitors","sample_size","start_date","end_date","variant_identifier","control_identifier","variant_segment","control_segment","website","handleInputChange","name","value","handleSubmit","variantSegment","controlSegment","alert","createTest","error","console","style","styles","children","title","fileName","_jsxFileName","lineNumber","columnNumber","formCard","formCardTitle","label","placeholder","onChangeText","onPress","_c","create","padding","fontSize","fontWeight","marginBottom","backgroundColor","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","$RefreshReg$"],"sources":["C:/Users/Karab/OneDrive/Documents/ABWinfuture/ab-testing-manager/src/components/CreateTest/CreateTest.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ABTestService from '../../services/api';\r\nimport { ABTestFormData } from '../../services/types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { StyleSheet, View, Text, ScrollView, Alert } from 'react-native';\r\nimport { Input, Button } from 'react-native-elements';\r\n\r\ninterface CreateTestProps {\r\n  setTestId: React.Dispatch<React.SetStateAction<string | null>>;\r\n}\r\n\r\nconst CreateTest: React.FC<CreateTestProps> = ({ setTestId }) => {\r\n  const [formData, setFormData] = useState<ABTestFormData>({\r\n    test_id: uuidv4(),\r\n    visitors: 0,\r\n    sample_size: 0,\r\n    start_date: '',\r\n    end_date: '',\r\n    variant_identifier: '',\r\n    control_identifier: '',\r\n    variant_segment: 0,\r\n    control_segment: 0,\r\n    website: '',\r\n  });\r\n\r\n  const handleInputChange = (name: string, value: string) => {\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    // Check if variant and control segments add up to 100\r\n    const variantSegment = +formData.variant_segment;\r\n    const controlSegment = +formData.control_segment;\r\n\r\n    if (variantSegment + controlSegment !== 100) {\r\n      Alert.alert('Error', 'The sum of the variant and control segments should equal 100');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await ABTestService.createTest(formData);\r\n      setTestId(formData.test_id);\r\n      Alert.alert('Success', 'Test created successfully');\r\n    } catch (error) {\r\n      console.error('Error creating test:', error);\r\n      Alert.alert('Error', 'Failed to create test');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.createTest}>\r\n      <Text style={styles.title}>Create Test</Text>\r\n\r\n      <View style={styles.formCard}>\r\n        <Text style={styles.formCardTitle}>General Information</Text>\r\n\r\n        <Input\r\n          label=\"Site Name\"\r\n          placeholder=\"Enter Site Name\"\r\n          value={formData.website}\r\n          onChangeText={(value) => handleInputChange('website', value)}\r\n        />\r\n\r\n        {/* ...Rest of the inputs similar to the above input... */}\r\n\r\n        <Button title=\"Create Test\" onPress={handleSubmit} />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default CreateTest;\r\n\r\nconst styles = StyleSheet.create({\r\n  createTest: {\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  formCard: {\r\n    backgroundColor: '#f9f9f9',\r\n    padding: 20,\r\n    borderRadius: 5,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 2,\r\n  },\r\n  formCardTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}