{"ast":null,"code":"import _regeneratorRuntime from\"/home/zaneles/ABWinfuture/campaign-manager-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/zaneles/ABWinfuture/campaign-manager-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";/**\n * ABTestService is the service layer for all the API calls related to AB Testing.\n */var ABTestService={/**\n   * Retrieves all campaign results.\n   *\n   * @returns A promise that resolves to the campaign result response.\n   */getAllCampaignResults:function getAllCampaignResults(){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"http://localhost:5008/v1/get_results\");case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;console.log('API Response:',data);return _context.abrupt(\"return\",data);case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.error('Error fetching data:',_context.t0);throw _context.t0;case 15:case\"end\":return _context.stop();}},_callee,null,[[0,11]]);}))();},/**\n   * Creates a new campaign with the provided campaign data.\n   *\n   * @param campaignData - The data for the campaign to be created.\n   * @returns A promise that resolves when the campaign is successfully created.\n   */createCampaign:function createCampaign(campaignData){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;console.log(\"Creating campaign: \".concat(campaignData.campaign_name));_context2.next=4;return fetch(\"https://172.104.247.115/main.js/v1/create_campaign\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(campaignData)});case 4:response=_context2.sent;if(response.ok){_context2.next=7;break;}throw new Error('Failed to create test');case 7:_context2.next=13;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);console.error('Error creating test:',_context2.t0);throw _context2.t0;case 13:case\"end\":return _context2.stop();}},_callee2,null,[[0,9]]);}))();},/**\n   * Pauses an active campaign.\n   *\n   * @param campaignId - The ID of the campaign to be paused.\n   * @returns A promise that resolves when the campaign is successfully paused.\n   */pauseCampaign:function pauseCampaign(campaignId){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var response;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"http://localhost:3000/api/v1/campaigns/\".concat(campaignId,\"/pause\"),{method:'PUT'});case 3:response=_context3.sent;if(response.ok){_context3.next=6;break;}throw new Error('Failed to pause campaign');case 6:_context3.next=12;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);console.error('Error pausing campaign:',_context3.t0);throw _context3.t0;case 12:case\"end\":return _context3.stop();}},_callee3,null,[[0,8]]);}))();},/**\n   * Resumes a paused campaign.\n   *\n   * @param campaignId - The ID of the campaign to be resumed.\n   * @returns A promise that resolves when the campaign is successfully resumed.\n   */resumeCampaign:function resumeCampaign(campaignId){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var response;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return fetch(\"http://localhost:3000/api/v1/campaigns/\".concat(campaignId,\"/resume\"),{method:'PUT'});case 3:response=_context4.sent;if(response.ok){_context4.next=6;break;}throw new Error('Failed to resume campaign');case 6:_context4.next=12;break;case 8:_context4.prev=8;_context4.t0=_context4[\"catch\"](0);console.error('Error resuming campaign:',_context4.t0);throw _context4.t0;case 12:case\"end\":return _context4.stop();}},_callee4,null,[[0,8]]);}))();},/**\n   * Checks if a particular element exists.\n   *\n   * @param identifier - The identifier of the element.\n   * @param type - The type of the element.\n   * @returns A promise that resolves to a boolean indicating whether the element exists.\n   */checkElementExistence:function checkElementExistence(identifier,type){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(){var response,data;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return fetch(\"http://localhost:5008/v1/check_element_existence/\".concat(type,\"/\").concat(identifier));case 3:response=_context5.sent;_context5.next=6;return response.json();case 6:data=_context5.sent;if(!(data.exists!==undefined)){_context5.next=11;break;}return _context5.abrupt(\"return\",data.exists);case 11:throw new Error(\"Invalid response from the server.\");case 12:_context5.next=18;break;case 14:_context5.prev=14;_context5.t0=_context5[\"catch\"](0);console.error('Error checking element existence:',_context5.t0);throw _context5.t0;case 18:case\"end\":return _context5.stop();}},_callee5,null,[[0,14]]);}))();}};export default ABTestService;","map":{"version":3,"names":["ABTestService","getAllCampaignResults","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_callee$","_context","prev","next","fetch","sent","json","console","log","abrupt","t0","error","stop","createCampaign","campaignData","_callee2","_callee2$","_context2","concat","campaign_name","method","headers","body","JSON","stringify","ok","Error","pauseCampaign","campaignId","_callee3","_callee3$","_context3","resumeCampaign","_callee4","_callee4$","_context4","checkElementExistence","identifier","type","_callee5","_callee5$","_context5","exists","undefined"],"sources":["/home/zaneles/ABWinfuture/campaign-manager-frontend/src/services/api.ts"],"sourcesContent":["import { CampaignResultResponse, CampaignData, CheckElementResponse } from './types';\n\n/**\n * ABTestService is the service layer for all the API calls related to AB Testing.\n */\nconst ABTestService = {\n  /**\n   * Retrieves all campaign results.\n   *\n   * @returns A promise that resolves to the campaign result response.\n   */\n  async getAllCampaignResults(): Promise<CampaignResultResponse> {\n    try {\n      const response = await fetch(`http://localhost:5008/v1/get_results`);\n      const data = await response.json();\n      console.log('API Response:', data); \n      return data;\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Creates a new campaign with the provided campaign data.\n   *\n   * @param campaignData - The data for the campaign to be created.\n   * @returns A promise that resolves when the campaign is successfully created.\n   */\n  async createCampaign(campaignData: CampaignData): Promise<void> {\n    try {\n      console.log(`Creating campaign: ${campaignData.campaign_name}`);\n      const response = await fetch(`https://172.104.247.115/main.js/v1/create_campaign`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(campaignData),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to create test');\n      }\n    } catch (error) {\n      console.error('Error creating test:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Pauses an active campaign.\n   *\n   * @param campaignId - The ID of the campaign to be paused.\n   * @returns A promise that resolves when the campaign is successfully paused.\n   */\n  async pauseCampaign(campaignId: number): Promise<void> {\n    try {\n      const response = await fetch(`http://localhost:3000/api/v1/campaigns/${campaignId}/pause`, {\n        method: 'PUT'\n      });\n  \n      if (!response.ok) {\n        throw new Error('Failed to pause campaign');\n      }\n    } catch (error) {\n      console.error('Error pausing campaign:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Resumes a paused campaign.\n   *\n   * @param campaignId - The ID of the campaign to be resumed.\n   * @returns A promise that resolves when the campaign is successfully resumed.\n   */\n  async resumeCampaign(campaignId: number): Promise<void> {\n    try {\n      const response = await fetch(`http://localhost:3000/api/v1/campaigns/${campaignId}/resume`, {\n        method: 'PUT'\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to resume campaign');\n      }\n    } catch (error) {\n      console.error('Error resuming campaign:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Checks if a particular element exists.\n   *\n   * @param identifier - The identifier of the element.\n   * @param type - The type of the element.\n   * @returns A promise that resolves to a boolean indicating whether the element exists.\n   */\n  async checkElementExistence(identifier: string, type: string): Promise<boolean> {\n    try {\n      const response = await fetch(`http://localhost:5008/v1/check_element_existence/${type}/${identifier}`);\n      const data: CheckElementResponse = await response.json();\n      if (data.exists !== undefined) {\n        return data.exists;\n      } else {\n        throw new Error(\"Invalid response from the server.\");\n      }\n    } catch (error) {\n      console.error('Error checking element existence:', error);\n      throw error;\n    }\n  },\n}\n\nexport default ABTestService;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}