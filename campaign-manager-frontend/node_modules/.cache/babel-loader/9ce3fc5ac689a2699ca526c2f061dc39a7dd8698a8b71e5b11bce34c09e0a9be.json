{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karab\\\\OneDrive\\\\Documents\\\\ABWinfuture\\\\ab-testing-manager\\\\src\\\\components\\\\RunTest\\\\RunTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid'; // Import the uuid function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RunTest = () => {\n  _s();\n  const [testName, setTestName] = useState(\"\");\n  const [click, setClick] = useState(0);\n  const [impressions, setImpressions] = useState(0);\n  const [variant_segment, setVariantSegment] = useState(0);\n  const [control_x_path, setControlXPath] = useState(\"\");\n  const [variant_x_path, setVariantXPath] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Test name validation\n    const re = /^[a-zA-Z_]*$/;\n    if (!re.test(testName)) {\n      setError(\"Test name should only contain letters and underscores\");\n      return;\n    }\n    const test_id = uuidv4(); // Generate a unique test id\n    const payload = {\n      test_id,\n      testName,\n      click,\n      impressions,\n      variant_segment,\n      control_x_path,\n      variant_x_path\n    };\n    try {\n      const response = await axios.post('http://localhost:5001/ab-test-metric-input', payload);\n      console.log(response.data);\n      setError(\"\"); // clear error message on successful submission\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Run an A/B Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Test Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: testName,\n          onChange: e => setTestName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Clicks:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: click,\n          onChange: e => setClick(Number(e.target.value)),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Impressions:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: impressions,\n          onChange: e => setImpressions(Number(e.target.value)),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Variant Segment:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: variant_segment,\n          onChange: e => setVariantSegment(Number(e.target.value)),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Control XPath:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: control_x_path,\n          onChange: e => setControlXPath(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Variant XPath:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: variant_x_path,\n          onChange: e => setVariantXPath(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 1\n      }, this), \"        \", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Run Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(RunTest, \"nWN9vWJtAjZRaVD7tldaOv3LkJ0=\");\n_c = RunTest;\nexport default RunTest;\nvar _c;\n$RefreshReg$(_c, \"RunTest\");","map":{"version":3,"names":["React","useState","axios","v4","uuidv4","jsxDEV","_jsxDEV","RunTest","_s","testName","setTestName","click","setClick","impressions","setImpressions","variant_segment","setVariantSegment","control_x_path","setControlXPath","variant_x_path","setVariantXPath","error","setError","handleSubmit","event","preventDefault","re","test","test_id","payload","response","post","console","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","required","Number","_c","$RefreshReg$"],"sources":["C:/Users/Karab/OneDrive/Documents/ABWinfuture/ab-testing-manager/src/components/RunTest/RunTest.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid'; // Import the uuid function\r\n\r\nconst RunTest: React.FC = () => {\r\n  const [testName, setTestName] = useState(\"\");\r\n  const [click, setClick] = useState(0);\r\n  const [impressions, setImpressions] = useState(0);\r\n  const [variant_segment, setVariantSegment] = useState(0);\r\n  const [control_x_path, setControlXPath] = useState(\"\");\r\n  const [variant_x_path, setVariantXPath] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    // Test name validation\r\n    const re = /^[a-zA-Z_]*$/;\r\n    if (!re.test(testName)) {\r\n      setError(\"Test name should only contain letters and underscores\");\r\n      return;\r\n    }\r\n\r\n    const test_id = uuidv4(); // Generate a unique test id\r\n    const payload = {\r\n      test_id, \r\n      testName, \r\n      click, \r\n      impressions, \r\n      variant_segment, \r\n      control_x_path, \r\n      variant_x_path\r\n    };\r\n    try {\r\n      const response = await axios.post('http://localhost:5001/ab-test-metric-input', payload);\r\n      console.log(response.data);\r\n      setError(\"\"); // clear error message on successful submission\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Run an A/B Test</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Test Name:\r\n          <input type=\"text\" value={testName} onChange={e => setTestName(e.target.value)} required />\r\n        </label>\r\n        {error && <p>{error}</p>}\r\n        <label>Clicks:\r\n  <input type=\"number\" value={click} onChange={e => setClick(Number(e.target.value))} required />\r\n</label>\r\n<label>Impressions:\r\n  <input type=\"number\" value={impressions} onChange={e => setImpressions(Number(e.target.value))} required />\r\n</label>\r\n<label>Variant Segment:\r\n  <input type=\"number\" value={variant_segment} onChange={e => setVariantSegment(Number(e.target.value))} required />\r\n</label>\r\n<label>Control XPath:\r\n  <input type=\"text\" value={control_x_path} onChange={e => setControlXPath(e.target.value)} required />\r\n</label>\r\n<label>Variant XPath:\r\n  <input type=\"text\" value={variant_x_path} onChange={e => setVariantXPath(e.target.value)} required />\r\n</label>        <button type=\"submit\">Run Test</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RunTest;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}