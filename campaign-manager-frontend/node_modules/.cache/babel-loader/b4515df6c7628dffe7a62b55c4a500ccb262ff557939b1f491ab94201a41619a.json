{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karab\\\\OneDrive\\\\Documents\\\\ABWinfuture\\\\ab-testing-manager\\\\src\\\\components\\\\TestResult\\\\TestResult.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Table, TableBody, TableCell, TableHead, TableRow, Button } from '@mui/material';\nimport ABTestService from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestResult = () => {\n  _s();\n  const classes = useStyles();\n  const [resultData, setResultData] = useState([]);\n  const [experimentIds, setExperimentIds] = useState([]);\n  const fetchExperimentIds = async () => {\n    try {\n      const experimentIdsResponse = await ABTestService.getExperimentIds();\n      const experimentIds = experimentIdsResponse.map(id => parseInt(id));\n      setExperimentIds(experimentIds);\n    } catch (error) {\n      console.error('Error fetching experiment ids:', error);\n    }\n  };\n  const fetchResults = async () => {\n    if (experimentIds) {\n      const results = [];\n      for (const id of experimentIds) {\n        try {\n          const response = await ABTestService.getTestResults(id);\n          results.push(response);\n        } catch (error) {\n          console.error('Error fetching results for id ' + id + ':', error);\n        }\n      }\n      setResultData(results);\n    }\n  };\n  useEffect(() => {\n    fetchExperimentIds();\n  }, []);\n  useEffect(() => {\n    fetchResults();\n    const interval = setInterval(fetchResults, 15000);\n    return () => clearInterval(interval);\n  }, [experimentIds]);\n  const renderMetricsTable = () => {\n    if (!resultData) {\n      return null;\n    }\n    return resultData.map((result, index) => {\n      const {\n        metrics,\n        confidence_interval,\n        status,\n        variants,\n        winner,\n        date_created\n      } = result;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: classes.heading,\n          children: \"Test Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date Created: \", date_created]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Variant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Impressions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Click Through Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: variants.map(variant => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: variant\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: metrics[variant].views\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [metrics[variant].clickThroughRate.toFixed(2), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)]\n            }, variant, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Confidence Interval: \", confidence_interval.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), winner && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Winner: \", winner ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.balloonEmoji,\n            children: \"\\uD83C\\uDF88\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.testResults,\n    children: [renderMetricsTable(), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.refreshButton,\n      onClick: fetchResults,\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 1\n  }, this);\n};\n_s(TestResult, \"bYm+8XkcINd0jdCJBdrcmzoQu14=\", true);\n_c = TestResult;\nexport default TestResult;\nvar _c;\n$RefreshReg$(_c, \"TestResult\");","map":{"version":3,"names":["React","useEffect","useState","Table","TableBody","TableCell","TableHead","TableRow","Button","ABTestService","jsxDEV","_jsxDEV","TestResult","_s","classes","useStyles","resultData","setResultData","experimentIds","setExperimentIds","fetchExperimentIds","experimentIdsResponse","getExperimentIds","map","id","parseInt","error","console","fetchResults","results","response","getTestResults","push","interval","setInterval","clearInterval","renderMetricsTable","result","index","metrics","confidence_interval","status","variants","winner","date_created","children","className","heading","fileName","_jsxFileName","lineNumber","columnNumber","table","variant","views","clickThroughRate","toFixed","balloonEmoji","testResults","color","refreshButton","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Karab/OneDrive/Documents/ABWinfuture/ab-testing-manager/src/components/TestResult/TestResult.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Table, TableBody, TableCell, TableHead, TableRow, Button } from '@mui/material';\r\nimport ABTestService from '../../services/api';\r\nimport { TestResultResponse } from '../../services/types';\r\n\r\n\r\n\r\n\r\nconst TestResult: React.FC = () => {\r\n\r\n  const classes = useStyles();\r\n  const [resultData, setResultData] = useState<TestResultResponse[]>([]);\r\n  const [experimentIds, setExperimentIds] = useState<number[]>([]);\r\n\r\n  const fetchExperimentIds = async () => {\r\n    try {\r\n      const experimentIdsResponse = await ABTestService.getExperimentIds();\r\n      const experimentIds: number[] = experimentIdsResponse.map((id) => parseInt(id));\r\n\r\n      setExperimentIds(experimentIds);\r\n    } catch (error) {\r\n      console.error('Error fetching experiment ids:', error);\r\n    }\r\n  };\r\n\r\n  const fetchResults = async () => {\r\n    if (experimentIds) {\r\n      const results = [];\r\n      for (const id of experimentIds) {\r\n        try {\r\n          const response = await ABTestService.getTestResults(id);\r\n          results.push(response);\r\n        } catch (error) {\r\n          console.error('Error fetching results for id ' + id + ':', error);\r\n        }\r\n      }\r\n      setResultData(results);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchExperimentIds();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchResults();\r\n    const interval = setInterval(fetchResults, 15000);\r\n    return () => clearInterval(interval);\r\n  }, [experimentIds]);\r\n\r\n  const renderMetricsTable = () => {\r\n    if (!resultData) {\r\n      return null;\r\n    }\r\n\r\n    return resultData.map((result, index) => {\r\n      const { metrics, confidence_interval, status, variants, winner, date_created } = result;\r\n\r\n      return (\r\n        <div key={index}>\r\n          <h2 className={classes.heading}>Test Results</h2>\r\n          <p>Date Created: {date_created}</p>\r\n          <Table className={classes.table}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Variant</TableCell>\r\n                <TableCell>Impressions</TableCell>\r\n                <TableCell>Click Through Rate</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {variants.map((variant) => (\r\n                <TableRow key={variant}>\r\n                  <TableCell>{variant}</TableCell>\r\n                  <TableCell>{metrics[variant].views}</TableCell>\r\n                  <TableCell>{metrics[variant].clickThroughRate.toFixed(2)}%</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          <p>Status: {status}</p>\r\n          <p>Confidence Interval: {confidence_interval.toFixed(2)}</p>\r\n          {winner && (\r\n        <p>\r\n          Winner: {winner ? <span className={classes.balloonEmoji}>🎈</span> : ''}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\n};\r\n\r\nreturn (\r\n<div className={classes.testResults}>\r\n{renderMetricsTable()}\r\n<Button\r\n     variant=\"contained\"\r\n     color=\"primary\"\r\n     className={classes.refreshButton}\r\n     onClick={fetchResults}\r\n   >\r\nRefresh\r\n</Button>\r\n</div>\r\n);\r\n};\r\n\r\nexport default TestResult;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}