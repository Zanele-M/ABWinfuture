{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karab\\\\OneDrive\\\\Documents\\\\ABWinfuture\\\\ab-testing-manager\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    const socket = io(\"localhost:5000/ab_metric_data\");\n    socket.on(\"connect\", () => {\n      console.log(\"connected\");\n    });\n    socket.on(\"ab_metric_data\", data => {\n      console.log(`Data returned from the server is: ${data}`);\n      // setMessage(data.data);\n    });\n\n    socket.on(\"disconnect\", () => {\n      console.log(\"disconnected\");\n    });\n    return function cleanup() {\n      socket.disconnect();\n    };\n  }, [message]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React/Flask App + socket.io\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ClLa+zvPL6vd0LAuHSvav3BaFBg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","io","jsxDEV","_jsxDEV","App","_s","message","setMessage","socket","on","console","log","data","cleanup","disconnect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Karab/OneDrive/Documents/ABWinfuture/ab-testing-manager/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\nfunction App() {\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n      const socket = io(\"localhost:5000/ab_metric_data\");\n\n      socket.on(\"connect\", () => {\n        console.log(\"connected\");\n      });\n\n      socket.on(\"ab_metric_data\", (data) => {\n        console.log(`Data returned from the server is: ${data}`);\n       // setMessage(data.data);\n      });\n\n      \n      socket.on(\"disconnect\", () => {\n        console.log(\"disconnected\");\n      });\n\n      return function cleanup() {\n        socket.disconnect();\n      };\n    }\n  , [message]);\n\n  return (\n    <div className=\"App\">\n      <h1>React/Flask App + socket.io</h1>\n        <p>\n          {message}\n        </p>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZ,MAAMS,MAAM,GAAGP,EAAE,CAAC,+BAA+B,CAAC;IAElDO,MAAM,CAACC,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1B,CAAC,CAAC;IAEFH,MAAM,CAACC,EAAE,CAAC,gBAAgB,EAAGG,IAAI,IAAK;MACpCF,OAAO,CAACC,GAAG,CAAE,qCAAoCC,IAAK,EAAC,CAAC;MACzD;IACD,CAAC,CAAC;;IAGFJ,MAAM,CAACC,EAAE,CAAC,YAAY,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC7B,CAAC,CAAC;IAEF,OAAO,SAASE,OAAOA,CAAA,EAAG;MACxBL,MAAM,CAACM,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EACD,CAACR,OAAO,CAAC,CAAC;EAEZ,oBACEH,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAAa,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCjB,OAAA;MAAAa,QAAA,EACGV;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACf,EAAA,CAlCQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}