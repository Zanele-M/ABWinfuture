{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karab\\\\OneDrive\\\\Documents\\\\ABWinfuture\\\\ab-testing-manager\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport CreateTest from './components/CreateTest/CreateTest';\nimport RunTest from './components/RunTest/RunTest';\nimport TestResult from './components/TestResult/TestResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [testName, setTestName] = useState(null);\n  const [currentTab, setCurrentTab] = useState('createTest');\n  const [tests, setTests] = useState([]);\n  const handleTestClick = testName => {\n    setTestName(testName);\n    setCurrentTab('testResults');\n  };\n  const renderTests = () => {\n    if (tests.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tests available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }, this);\n    }\n    return tests.map((test, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-item\",\n      onClick: () => handleTestClick(test),\n      children: test\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Win\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Ab\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Discover what your customers respond to and maximize your impact with WinAb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `tab ${currentTab === 'createTest' ? 'active' : ''}`,\n        onClick: () => setCurrentTab('createTest'),\n        children: \"Create AB Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `tab ${currentTab === 'runTest' ? 'active' : ''}`,\n        onClick: () => setCurrentTab('runTest'),\n        children: \"Create Mock Clicks/Impressions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `tab ${currentTab === 'testResults' ? 'active' : ''}`,\n        onClick: () => setCurrentTab('testResults') // changed 'testResult' to 'testResults'\n        ,\n        children: \"Tests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [currentTab === 'createTest' && /*#__PURE__*/_jsxDEV(CreateTest, {\n        setTestId: setTestName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 41\n      }, this), currentTab === 'runTest' && /*#__PURE__*/_jsxDEV(RunTest, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 38\n      }, this), currentTab === 'testResults' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tests-list\",\n          children: renderTests()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), currentTab === 'testResults' && testName && /*#__PURE__*/_jsxDEV(TestResult, {\n        test_name: testName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 54\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"IOat0HqqXiiJ6xpCnP8ejF/APT0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CreateTest","RunTest","TestResult","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","testName","setTestName","currentTab","setCurrentTab","tests","setTests","handleTestClick","renderTests","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","test","index","className","onClick","setTestId","test_name","_c","$RefreshReg$"],"sources":["C:/Users/Karab/OneDrive/Documents/ABWinfuture/ab-testing-manager/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport CreateTest from './components/CreateTest/CreateTest';\nimport RunTest from './components/RunTest/RunTest';\nimport TestResult from './components/TestResult/TestResult';\n\nconst App: React.FC = () => {\n  const [testName, setTestName] = useState<string | null>(null);\n  const [currentTab, setCurrentTab] = useState('createTest');\n  const [tests, setTests] = useState<string[]>([]);\n\n  const handleTestClick = (testName: string) => {\n    setTestName(testName);\n    setCurrentTab('testResults');\n  };\n\n  const renderTests = () => {\n    if (tests.length === 0) {\n      return <p>No tests available.</p>;\n    }\n\n    return tests.map((test, index) => (\n      <div\n        key={index}\n        className=\"test-item\"\n        onClick={() => handleTestClick(test)}\n      >\n        {test}\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>\n          <span>Win</span>\n          <span>Ab</span>\n        </h1>\n        <p>Discover what your customers respond to and maximize your impact with WinAb</p>\n      </header>\n\n      <nav>\n  <div\n    className={`tab ${currentTab === 'createTest' ? 'active' : ''}`}\n    onClick={() => setCurrentTab('createTest')}\n  >\n    Create AB Test\n  </div>\n  <div\n    className={`tab ${currentTab === 'runTest' ? 'active' : ''}`}\n    onClick={() => setCurrentTab('runTest')}\n  >\n    Create Mock Clicks/Impressions\n  </div>\n  <div\n    className={`tab ${currentTab === 'testResults' ? 'active' : ''}`}\n    onClick={() => setCurrentTab('testResults')} // changed 'testResult' to 'testResults'\n  >\n    Tests\n  </div>\n</nav>\n\n\n      <div className=\"tab-content\">\n        {currentTab === 'createTest' && <CreateTest setTestId={setTestName} />}\n        {currentTab === 'runTest' && <RunTest />}\n        {currentTab === 'testResults' && (\n          <>\n            <h2>Tests</h2>\n            <div className=\"tests-list\">{renderTests()}</div>\n          </>\n        )}\n        {currentTab === 'testResults' && testName && <TestResult test_name={testName} />}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}