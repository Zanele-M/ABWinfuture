{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karab\\\\OneDrive\\\\Documents\\\\ABWinfuture\\\\ab-testing-manager\\\\src\\\\components\\\\TestResult\\\\TestResult.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Table, TableContainer, TableHead, TableBody, TableRow, TableCell, Button, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  testResults: {\n    padding: '20px'\n  },\n  refreshButton: {\n    margin: theme.spacing(2, 0)\n  }\n}));\nconst TestResults = () => {\n  _s();\n  const classes = useStyles();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetchResults();\n    const interval = setInterval(fetchResults, 15000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  const fetchResults = async () => {\n    try {\n      const response = await axios.post('/calculate_results');\n      setData(response.data);\n    } catch (error) {\n      console.error('Error fetching results:', error);\n    }\n  };\n  const renderMetricsTable = () => {\n    if (!data) {\n      return null;\n    }\n    const {\n      metrics,\n      experiment_name,\n      confidence_interval,\n      status,\n      variants,\n      winner,\n      date_created\n    } = data;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Experiment: experiment_name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: [\"Date Created: \", date_created]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Variants\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Impressions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Click-Through Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: variants.map(variant => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: variant\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: metrics[variant].impressions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: metrics[variant].click_through_rate.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)]\n            }, variant, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: [\"Confidence Interval: \", confidence_interval.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: [\"Status: \", status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: [\"Winner: \", winner]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.testResults,\n    children: [renderMetricsTable(), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.refreshButton,\n      onClick: fetchResults,\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(TestResults, \"KREmyJyQC/sWdjKT4Ypeginm/Cc=\", false, function () {\n  return [useStyles];\n});\n_c = TestResults;\nexport default TestResults;\nvar _c;\n$RefreshReg$(_c, \"TestResults\");","map":{"version":3,"names":["React","useEffect","useState","Table","TableContainer","TableHead","TableBody","TableRow","TableCell","Button","Typography","makeStyles","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","useStyles","theme","testResults","padding","refreshButton","margin","spacing","TestResults","_s","classes","data","setData","fetchResults","interval","setInterval","clearInterval","response","post","error","console","renderMetricsTable","metrics","experiment_name","confidence_interval","status","variants","winner","date_created","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","impressions","click_through_rate","toFixed","className","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Karab/OneDrive/Documents/ABWinfuture/ab-testing-manager/src/components/TestResult/TestResult.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Table,\r\n  TableContainer,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Button,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  testResults: {\r\n    padding: '20px',\r\n  },\r\n  refreshButton: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n}));\r\n\r\nconst TestResults = () => {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchResults();\r\n    const interval = setInterval(fetchResults, 15000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  const fetchResults = async () => {\r\n    try {\r\n      const response = await axios.post('/calculate_results');\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching results:', error);\r\n    }\r\n  };\r\n\r\n  const renderMetricsTable = () => {\r\n    if (!data) {\r\n      return null;\r\n    }\r\n\r\n    const { metrics, experiment_name, confidence_interval, status, variants, winner, date_created } = data;\r\n\r\n    return (\r\n      <>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Experiment: experiment_name\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Date Created: {date_created}\r\n        </Typography>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Variants</TableCell>\r\n                <TableCell>Impressions</TableCell>\r\n                <TableCell>Click-Through Rate</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {variants.map((variant) => (\r\n                <TableRow key={variant}>\r\n                  <TableCell>{variant}</TableCell>\r\n                  <TableCell>{metrics[variant].impressions}</TableCell>\r\n                  <TableCell>{metrics[variant].click_through_rate.toFixed(2)}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Confidence Interval: {confidence_interval.toFixed(2)}%\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Status: {status}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Winner: {winner}\r\n        </Typography>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.testResults}>\r\n      {renderMetricsTable()}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.refreshButton}\r\n        onClick={fetchResults}\r\n      >\r\n        Refresh\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestResults;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,KAAK,EACLC,cAAc,EACdC,SAAS,EACTC,SAAS,EACTC,QAAQ,EACRC,SAAS,EACTC,MAAM,EACNC,UAAU,QACL,mBAAmB;AAC1B,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAK,KAAM;EACvCC,WAAW,EAAE;IACXC,OAAO,EAAE;EACX,CAAC;EACDC,aAAa,EAAE;IACbC,MAAM,EAAEJ,KAAK,CAACK,OAAO,CAAC,CAAC,EAAE,CAAC;EAC5B;AACF,CAAC,CAAC,CAAC;AAEH,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,OAAO,GAAGT,SAAS,CAAC,CAAC;EAC3B,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd4B,YAAY,CAAC,CAAC;IACd,MAAMC,QAAQ,GAAGC,WAAW,CAACF,YAAY,EAAE,KAAK,CAAC;IACjD,OAAO,MAAM;MACXG,aAAa,CAACF,QAAQ,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,oBAAoB,CAAC;MACvDN,OAAO,CAACK,QAAQ,CAACN,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAI,CAACV,IAAI,EAAE;MACT,OAAO,IAAI;IACb;IAEA,MAAM;MAAEW,OAAO;MAAEC,eAAe;MAAEC,mBAAmB;MAAEC,MAAM;MAAEC,QAAQ;MAAEC,MAAM;MAAEC;IAAa,CAAC,GAAGjB,IAAI;IAEtG,oBACEb,OAAA,CAAAE,SAAA;MAAA6B,QAAA,gBACE/B,OAAA,CAACJ,UAAU;QAACoC,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAF,QAAA,EAAC;MAEtC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbrC,OAAA,CAACJ,UAAU;QAACoC,OAAO,EAAC,WAAW;QAACC,YAAY;QAAAF,QAAA,GAAC,gBAC7B,EAACD,YAAY;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,eACbrC,OAAA,CAACV,cAAc;QAAAyC,QAAA,eACb/B,OAAA,CAACX,KAAK;UAAA0C,QAAA,gBACJ/B,OAAA,CAACT,SAAS;YAAAwC,QAAA,eACR/B,OAAA,CAACP,QAAQ;cAAAsC,QAAA,gBACP/B,OAAA,CAACN,SAAS;gBAAAqC,QAAA,EAAC;cAAQ;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAC/BrC,OAAA,CAACN,SAAS;gBAAAqC,QAAA,EAAC;cAAW;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAClCrC,OAAA,CAACN,SAAS;gBAAAqC,QAAA,EAAC;cAAkB;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACZrC,OAAA,CAACR,SAAS;YAAAuC,QAAA,EACPH,QAAQ,CAACU,GAAG,CAAEN,OAAO,iBACpBhC,OAAA,CAACP,QAAQ;cAAAsC,QAAA,gBACP/B,OAAA,CAACN,SAAS;gBAAAqC,QAAA,EAAEC;cAAO;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAChCrC,OAAA,CAACN,SAAS;gBAAAqC,QAAA,EAAEP,OAAO,CAACQ,OAAO,CAAC,CAACO;cAAW;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACrDrC,OAAA,CAACN,SAAS;gBAAAqC,QAAA,EAAEP,OAAO,CAACQ,OAAO,CAAC,CAACQ,kBAAkB,CAACC,OAAO,CAAC,CAAC;cAAC;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC;YAAA,GAH1DL,OAAO;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIZ,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC,eACjBrC,OAAA,CAACJ,UAAU;QAACoC,OAAO,EAAC,WAAW;QAACC,YAAY;QAAAF,QAAA,GAAC,uBACtB,EAACL,mBAAmB,CAACe,OAAO,CAAC,CAAC,CAAC,EAAC,GACvD;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbrC,OAAA,CAACJ,UAAU;QAACoC,OAAO,EAAC,WAAW;QAACC,YAAY;QAAAF,QAAA,GAAC,UACnC,EAACJ,MAAM;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACbrC,OAAA,CAACJ,UAAU;QAACoC,OAAO,EAAC,WAAW;QAACC,YAAY;QAAAF,QAAA,GAAC,UACnC,EAACF,MAAM;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA,eACb,CAAC;EAEP,CAAC;EAED,oBACErC,OAAA;IAAK0C,SAAS,EAAE9B,OAAO,CAACP,WAAY;IAAA0B,QAAA,GACjCR,kBAAkB,CAAC,CAAC,eACrBvB,OAAA,CAACL,MAAM;MACLqC,OAAO,EAAC,WAAW;MACnBW,KAAK,EAAC,SAAS;MACfD,SAAS,EAAE9B,OAAO,CAACL,aAAc;MACjCqC,OAAO,EAAE7B,YAAa;MAAAgB,QAAA,EACvB;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAlFID,WAAW;EAAA,QACCP,SAAS;AAAA;AAAA0C,EAAA,GADrBnC,WAAW;AAoFjB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}