{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karab\\\\OneDrive\\\\Documents\\\\ABWinfuture\\\\ab-testing-manager\\\\src\\\\components\\\\TestResult\\\\TestResult.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Table, TableBody, TableCell, TableHead, TableRow, Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TestResults = () => {\n  _s();\n  const useStyles = makeStyles(theme => ({\n    testResults: {\n      padding: '20px'\n    },\n    heading: {\n      marginBottom: '20px'\n    },\n    table: {\n      width: '100%',\n      borderCollapse: 'collapse',\n      marginBottom: '20px'\n    },\n    tableHeaderCell: {\n      padding: '10px',\n      border: '1px solid #ccc',\n      backgroundColor: '#f7f7f7',\n      color: '#333',\n      fontWeight: 'bold'\n    },\n    tableCell: {\n      padding: '10px',\n      border: '1px solid #ccc',\n      textAlign: 'center'\n    },\n    winnerCell: {\n      fontWeight: 'bold'\n    },\n    refreshButton: {\n      marginTop: '10px'\n    },\n    balloonEmoji: {\n      marginRight: theme.spacing(1)\n    }\n  }));\n  const classes = useStyles();\n  const [resultData, setResultData] = useState(null);\n  const fetchResults = async () => {\n    try {\n      const response = setResultData(response.data);\n    } catch (error) {\n      console.error('Error fetching results:', error);\n    }\n  };\n  useEffect(() => {\n    fetchResults();\n    const interval = setInterval(fetchResults, 15000); // Fetch results every 15 seconds\n    return () => clearInterval(interval);\n  }, []);\n  const renderMetricsTable = () => {\n    if (!resultData) {\n      return null;\n    }\n    const {\n      metrics,\n      confidence_interval,\n      status,\n      variants,\n      winner,\n      date_created\n    } = resultData;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: classes.heading,\n        children: \"Test Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date Created: \", date_created]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Variant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Impressions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Click Through Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: variants.map(variant => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: variant\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: metrics[variant].views\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: metrics[variant].clickThroughRate.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, variant, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Confidence Interval: \", confidence_interval.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), winner && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Winner: \", winner ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.balloonEmoji,\n          children: \"\\uD83C\\uDF88\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.testResults,\n    children: [renderMetricsTable(), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.refreshButton,\n      onClick: fetchResults,\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(TestResults, \"k42QknScgJ9Ev3qq6fxeHBLWBAM=\", true);\n_c = TestResults;\nexport default TestResults;\nvar _c;\n$RefreshReg$(_c, \"TestResults\");","map":{"version":3,"names":["React","useEffect","useState","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","TestResults","_s","useStyles","theme","testResults","padding","heading","marginBottom","table","width","borderCollapse","tableHeaderCell","border","backgroundColor","color","fontWeight","tableCell","textAlign","winnerCell","refreshButton","marginTop","balloonEmoji","marginRight","spacing","classes","resultData","setResultData","fetchResults","response","data","error","console","interval","setInterval","clearInterval","renderMetricsTable","metrics","confidence_interval","status","variants","winner","date_created","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","variant","views","clickThroughRate","toFixed","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Karab/OneDrive/Documents/ABWinfuture/ab-testing-manager/src/components/TestResult/TestResult.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Table, TableBody, TableCell, TableHead, TableRow, Button } from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\ninterface Metrics {\r\n  [key: string]: {\r\n    views: number;\r\n    clickThroughRate: number;\r\n  };\r\n}\r\n\r\ninterface ResultData {\r\n  metrics: Metrics;\r\n  confidence_interval: number;\r\n  status: string;\r\n  variants: string[];\r\n  winner: string | null;\r\n  date_created: string;\r\n}\r\n\r\nconst TestResults: React.FC = () => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    testResults: {\r\n      padding: '20px',\r\n    },\r\n    heading: {\r\n      marginBottom: '20px',\r\n    },\r\n    table: {\r\n      width: '100%',\r\n      borderCollapse: 'collapse',\r\n      marginBottom: '20px',\r\n    },\r\n    tableHeaderCell: {\r\n      padding: '10px',\r\n      border: '1px solid #ccc',\r\n      backgroundColor: '#f7f7f7',\r\n      color: '#333',\r\n      fontWeight: 'bold',\r\n    },\r\n    tableCell: {\r\n      padding: '10px',\r\n      border: '1px solid #ccc',\r\n      textAlign: 'center',\r\n    },\r\n    winnerCell: {\r\n      fontWeight: 'bold',\r\n    },\r\n    refreshButton: {\r\n      marginTop: '10px',\r\n    },\r\n    \r\n  balloonEmoji: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const [resultData, setResultData] = useState<ResultData | null>(null);\r\n\r\n  const fetchResults = async () => {\r\n    try {\r\n      const response = \r\n      setResultData(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching results:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchResults();\r\n    const interval = setInterval(fetchResults, 15000); // Fetch results every 15 seconds\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const renderMetricsTable = () => {\r\n    if (!resultData) {\r\n      return null;\r\n    }\r\n\r\n    const { metrics, confidence_interval, status, variants, winner, date_created } = resultData;\r\n\r\n    return (\r\n      <>\r\n        <h2 className={classes.heading}>Test Results</h2>\r\n        <p>Date Created: {date_created}</p>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Variant</TableCell>\r\n              <TableCell>Impressions</TableCell>\r\n              <TableCell>Click Through Rate</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {variants.map((variant) => (\r\n              <TableRow key={variant}>\r\n                <TableCell>{variant}</TableCell>\r\n                <TableCell>{metrics[variant].views}</TableCell>\r\n                <TableCell>{metrics[variant].clickThroughRate.toFixed(2)}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <p>Status: {status}</p>\r\n        <p>Confidence Interval: {confidence_interval.toFixed(2)}</p>\r\n        {winner && (\r\n          <p>\r\n          Winner: {winner ? <span className={classes.balloonEmoji}>🎈</span> : ''}  \r\n                  </p>\r\n        )}\r\n      </>\r\n    );\r\n\r\n  };\r\n\r\n  return (\r\n    <div className={classes.testResults}>\r\n      {renderMetricsTable()}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.refreshButton}\r\n        onClick={fetchResults}\r\n      >\r\n        Refresh\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n        \r\n      \r\n      export default TestResults;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}