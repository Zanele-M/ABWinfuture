{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karab\\\\OneDrive\\\\Documents\\\\ABWinfuture\\\\ab-testing-manager\\\\src\\\\components\\\\TestResultggg\\\\TestResults.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestResults = _ref => {\n  _s();\n  let {\n    onTestSelect\n  } = _ref;\n  const [testNames, setTestNames] = useState([]);\n  useEffect(() => {\n    const fetchTestNames = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/test_names');\n        setTestNames(response.data.test_names);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTestNames();\n  }, []);\n  const handleTestClick = name => {\n    onTestSelect(name);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Test Names\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), testNames.map((name, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleTestClick(name),\n      children: name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(TestResults, \"MASQRtfdziIPv76Te282bOSbyhI=\");\n_c = TestResults;\nexport default TestResults;\nvar _c;\n$RefreshReg$(_c, \"TestResults\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TestResults","_ref","_s","onTestSelect","testNames","setTestNames","fetchTestNames","response","get","data","test_names","error","console","handleTestClick","name","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Karab/OneDrive/Documents/ABWinfuture/ab-testing-manager/src/components/TestResultggg/TestResults.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface TestsListProps {\r\n  onTestSelect: (test_name: string) => void;\r\n}\r\n\r\nconst TestResults: React.FC<TestsListProps> = ({ onTestSelect }) => {\r\n  const [testNames, setTestNames] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTestNames = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/test_names');\r\n        setTestNames(response.data.test_names);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchTestNames();\r\n  }, []);\r\n\r\n  const handleTestClick = (name: string) => {\r\n    onTestSelect(name);\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>All Test Names</h2>\r\n      {testNames.map((name, index) => (\r\n        <div key={index} onClick={() => handleTestClick(name)}>\r\n          {name}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestResults;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM1B,MAAMC,WAAqC,GAAGC,IAAA,IAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC;EAAa,CAAC,GAAAF,IAAA;EAC7D,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAW,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,kCAAkC,CAAC;QACpEH,YAAY,CAACE,QAAQ,CAACE,IAAI,CAACC,UAAU,CAAC;MACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDL,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,eAAe,GAAIC,IAAY,IAAK;IACxCX,YAAY,CAACW,IAAI,CAAC;EACpB,CAAC;EACD,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBf,SAAS,CAACgB,GAAG,CAAC,CAACN,IAAI,EAAEO,KAAK,kBACzBtB,OAAA;MAAiBuB,OAAO,EAAEA,CAAA,KAAMT,eAAe,CAACC,IAAI,CAAE;MAAAC,QAAA,EACnDD;IAAI,GADGO,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CA5BIF,WAAqC;AAAAuB,EAAA,GAArCvB,WAAqC;AA8B3C,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}