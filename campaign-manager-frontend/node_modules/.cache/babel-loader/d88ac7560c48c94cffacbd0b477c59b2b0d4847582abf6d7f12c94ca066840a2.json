{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karab\\\\OneDrive\\\\Documents\\\\ABWinfuture\\\\ab-testing-manager\\\\src\\\\components\\\\RunTest\\\\RunTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Typography, Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RunTest = () => {\n  _s();\n  const [testNames, setTestNames] = useState([]);\n  const [testName, setTestName] = useState(\"\");\n  const [clicks, setClicks] = useState(0);\n  const [impressions, setImpressions] = useState(0);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    fetchTestNames();\n  }, []);\n  const fetchTestNames = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/test_names');\n      setTestNames(response.data.test_names);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleSelectChange = event => {\n    setTestName(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const payload = {\n      test_name: testName,\n      clicks,\n      impressions\n    };\n    try {\n      const response = await axios.post('http://localhost:5001/ab-test-metric-input', payload);\n      setError(\"\");\n    } catch (error) {\n      console.error(error);\n      setError(\"There was an error running the test\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        required: true,\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Test Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: testName,\n          onChange: handleSelectChange,\n          children: testNames.map((name, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: name,\n            children: name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Clicks\",\n        type: \"number\",\n        value: clicks,\n        onChange: e => setClicks(Number(e.target.value)),\n        required: true,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Impressions\",\n        type: \"number\",\n        value: impressions,\n        onChange: e => setImpressions(Number(e.target.value)),\n        required: true,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Run Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(RunTest, \"GLgB8m29pIQjpOkk376Egc/XdTA=\");\n_c = RunTest;\nexport default RunTest;\nvar _c;\n$RefreshReg$(_c, \"RunTest\");","map":{"version":3,"names":["React","useEffect","useState","axios","TextField","Button","Typography","Select","MenuItem","InputLabel","FormControl","jsxDEV","_jsxDEV","RunTest","_s","testNames","setTestNames","testName","setTestName","clicks","setClicks","impressions","setImpressions","error","setError","fetchTestNames","response","get","data","test_names","console","handleSelectChange","event","target","value","handleSubmit","preventDefault","payload","test_name","post","children","onSubmit","required","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","name","index","color","label","type","e","Number","variant","_c","$RefreshReg$"],"sources":["C:/Users/Karab/OneDrive/Documents/ABWinfuture/ab-testing-manager/src/components/RunTest/RunTest.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, makeStyles, Typography, Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\r\n\r\nconst RunTest: React.FC = () => {\r\n  const [testNames, setTestNames] = useState<string[]>([]);\r\n  const [testName, setTestName] = useState(\"\");\r\n  const [clicks, setClicks] = useState(0);\r\n  const [impressions, setImpressions] = useState(0);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchTestNames();\r\n  }, []);\r\n\r\n  const fetchTestNames = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/test_names');\r\n      setTestNames(response.data.test_names);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleSelectChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setTestName(event.target.value as string);\r\n  };\r\n\r\n  const handleSubmit = async (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n  \r\n    const payload = {\r\n      test_name: testName, \r\n      clicks, \r\n      impressions\r\n    };\r\n    try {\r\n      const response = await axios.post('http://localhost:5001/ab-test-metric-input', payload);\r\n      setError(\"\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(\"There was an error running the test\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <FormControl required fullWidth>\r\n          <InputLabel>Test Name</InputLabel>\r\n          <Select value={testName} onChange={handleSelectChange}>\r\n            {testNames.map((name, index) => (\r\n              <MenuItem value={name} key={index}>{name}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {error && <Typography color=\"error\">{error}</Typography>}\r\n\r\n        <TextField\r\n          label=\"Clicks\"\r\n          type=\"number\"\r\n          value={clicks}\r\n          onChange={e => setClicks(Number(e.target.value))}\r\n          required\r\n          fullWidth\r\n        />\r\n\r\n        <TextField\r\n          label=\"Impressions\"\r\n          type=\"number\"\r\n          value={impressions}\r\n          onChange={e => setImpressions(Number(e.target.value))}\r\n          required\r\n          fullWidth\r\n        />\r\n\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Run Test\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RunTest;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,MAAM,EAAcC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,WAAW,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzH,MAAMC,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAW,EAAE,CAAC;EACxD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdwB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAAC,kCAAkC,CAAC;MACpEX,YAAY,CAACU,QAAQ,CAACE,IAAI,CAACC,UAAU,CAAC;IACxC,CAAC,CAAC,OAAON,KAAK,EAAE;MACdO,OAAO,CAACP,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMQ,kBAAkB,GAAIC,KAA4C,IAAK;IAC3Ed,WAAW,CAACc,KAAK,CAACC,MAAM,CAACC,KAAe,CAAC;EAC3C,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,KAAsB,IAAK;IACrDA,KAAK,CAACI,cAAc,CAAC,CAAC;IAEtB,MAAMC,OAAO,GAAG;MACdC,SAAS,EAAErB,QAAQ;MACnBE,MAAM;MACNE;IACF,CAAC;IACD,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMvB,KAAK,CAACoC,IAAI,CAAC,4CAA4C,EAAEF,OAAO,CAAC;MACxFb,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdO,OAAO,CAACP,KAAK,CAACA,KAAK,CAAC;MACpBC,QAAQ,CAAC,qCAAqC,CAAC;IACjD;EACF,CAAC;EAED,oBACEZ,OAAA;IAAA4B,QAAA,eACE5B,OAAA;MAAM6B,QAAQ,EAAEN,YAAa;MAAAK,QAAA,gBAC3B5B,OAAA,CAACF,WAAW;QAACgC,QAAQ;QAACC,SAAS;QAAAH,QAAA,gBAC7B5B,OAAA,CAACH,UAAU;UAAA+B,QAAA,EAAC;QAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAClCnC,OAAA,CAACL,MAAM;UAAC2B,KAAK,EAAEjB,QAAS;UAAC+B,QAAQ,EAAEjB,kBAAmB;UAAAS,QAAA,EACnDzB,SAAS,CAACkC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzBvC,OAAA,CAACJ,QAAQ;YAAC0B,KAAK,EAAEgB,IAAK;YAAAV,QAAA,EAAcU;UAAI,GAAZC,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAkB,CACpD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAEbxB,KAAK,iBAAIX,OAAA,CAACN,UAAU;QAAC8C,KAAK,EAAC,OAAO;QAAAZ,QAAA,EAAEjB;MAAK;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAExDnC,OAAA,CAACR,SAAS;QACRiD,KAAK,EAAC,QAAQ;QACdC,IAAI,EAAC,QAAQ;QACbpB,KAAK,EAAEf,MAAO;QACd6B,QAAQ,EAAEO,CAAC,IAAInC,SAAS,CAACoC,MAAM,CAACD,CAAC,CAACtB,MAAM,CAACC,KAAK,CAAC,CAAE;QACjDQ,QAAQ;QACRC,SAAS;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eAEFnC,OAAA,CAACR,SAAS;QACRiD,KAAK,EAAC,aAAa;QACnBC,IAAI,EAAC,QAAQ;QACbpB,KAAK,EAAEb,WAAY;QACnB2B,QAAQ,EAAEO,CAAC,IAAIjC,cAAc,CAACkC,MAAM,CAACD,CAAC,CAACtB,MAAM,CAACC,KAAK,CAAC,CAAE;QACtDQ,QAAQ;QACRC,SAAS;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eAEFnC,OAAA,CAACP,MAAM;QAACiD,IAAI,EAAC,QAAQ;QAACG,OAAO,EAAC,WAAW;QAACL,KAAK,EAAC,SAAS;QAAAZ,QAAA,EAAC;MAE1D;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACjC,EAAA,CA/EID,OAAiB;AAAA6C,EAAA,GAAjB7C,OAAiB;AAiFvB,eAAeA,OAAO;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}