{"ast":null,"code":"// ABTestService.ts\n\nconst ABTestService = {\n  // Replace TestResultResponse with ResultData in the return type of getTestResults\n  async getAllCampaignResults() {\n    try {\n      const response = await fetch(`http://localhost:5002/v1/get_results}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      throw error;\n    }\n  },\n  async createTest(formData) {\n    try {\n      console.log(`Creating campaign: ${formData.campaign_name}`);\n      const response = await fetch(`http://localhost:3000/api/v1/create_campaign`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create test');\n      }\n    } catch (error) {\n      console.error('Error creating test:', error);\n      throw error;\n    }\n  }\n};\nexport default ABTestService;","map":{"version":3,"names":["ABTestService","getAllCampaignResults","response","fetch","data","json","error","console","createTest","formData","log","campaign_name","method","headers","body","JSON","stringify","ok","Error"],"sources":["C:/Users/Karab/OneDrive/Documents/ABWinfuture/campaign-manager-frontend/src/services/api.ts"],"sourcesContent":["// ABTestService.ts\r\nimport { CampaignResultResponse, CampaignData } from './types';\r\n\r\nconst ABTestService = {\r\n // Replace TestResultResponse with ResultData in the return type of getTestResults\r\nasync getAllCampaignResults(): Promise<CampaignResultResponse> {\r\n  try {\r\n    const response = await fetch(`http://localhost:5002/v1/get_results}`);\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error);\r\n    throw error;\r\n  }\r\n},\r\n\r\n  async createTest(formData: CampaignData): Promise<void> {\r\n    try {\r\n      console.log(`Creating campaign: ${formData.campaign_name}`);\r\n      const response = await fetch(`http://localhost:3000/api/v1/create_campaign`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to create test');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating test:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n\r\n};\r\n\r\n\r\n\r\nexport default ABTestService;\r\n"],"mappings":"AAAA;;AAGA,MAAMA,aAAa,GAAG;EACrB;EACD,MAAMC,qBAAqBA,CAAA,EAAoC;IAC7D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,uCAAsC,CAAC;MACrE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF,CAAC;EAEC,MAAME,UAAUA,CAACC,QAAsB,EAAiB;IACtD,IAAI;MACFF,OAAO,CAACG,GAAG,CAAE,sBAAqBD,QAAQ,CAACE,aAAc,EAAC,CAAC;MAC3D,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,8CAA6C,EAAE;QAC3ES,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;MAE/B,CAAC,CAAC;MAEF,IAAI,CAACP,QAAQ,CAACe,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF;AAIF,CAAC;AAID,eAAeN,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}